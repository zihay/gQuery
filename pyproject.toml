[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2", "numpy"]
build-backend = "scikit_build_core.build"

[project]
name = "gquery"
version = "0.1.0"
description = "A geometric query library for fast CPU and GPU-accelerated geometry queries"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "gQuery Authors", email = "example@example.com" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
]

[project.urls]
Homepage = "https://github.com/zihay/gquery"
Documentation = "https://github.com/zihay/gquery"
"Bug Tracker" = "https://github.com/zihay/gquery/issues"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# CMake options
cmake.minimum-version = "3.15"
cmake.args = []
cmake.verbose = true

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# Don't test Python 3.8 wheels on macOS/arm64
test-skip = "cp38-macosx_*:arm64"

# Skip PyPy builds as they may not be compatible with nanobind
skip = ["pp*"]

# Needed for full C++20 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"