name: Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp* *-musllinux_* cp38-macosx_arm64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_TEST_SKIP: "*_arm64 *_universal2:arm64"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_TEST_REQUIRES: "pytest"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install build dependencies
        run: |
          python -m pip install build

      - name: Build SDist
        run: |
          python -m build --sdist

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_to_release:
    name: Upload to GitHub Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Prepare distribution files
        run: |
          mkdir -p dist_upload
          cp dist/wheels-*/*.whl dist_upload/
          cp dist/sdist/*.tar.gz dist_upload/
          ls -la dist_upload/

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist_upload/* 